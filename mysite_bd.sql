-- phpMyAdmin SQL Dump
-- version 5.1.0
-- https://www.phpmyadmin.net/
--
-- Хост: localhost
-- Время создания: Апр 27 2021 г., 14:03
-- Версия сервера: 8.0.23
-- Версия PHP: 8.0.2

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `mysite_bd`
--

-- --------------------------------------------------------

--
-- Структура таблицы `articles`
--

CREATE TABLE `articles` (
  `id` int UNSIGNED NOT NULL,
  `articles_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `article_text` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `short_text` text CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Дамп данных таблицы `articles`
--

INSERT INTO `articles` (`id`, `articles_name`, `article_text`, `short_text`) VALUES
(22, '<h1>httpd.conf на Русском языке</h1>\r\n', '<p># Основан на конфигурационных файлах сервера NCSA,</p>\r\n\r\n<p># написанных Rob McCool.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Это главный конфиг-файл сервера Apache,</p>\r\n\r\n<p># содержащий директивы, управляющие</p>\r\n\r\n<p># работой сервера. За более подробной информацией об этих директивах,</p>\r\n\r\n<p># обращайтесь по адресу &lt;URL:http://httpd.apache.org/docs-2.0/&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Не стоит читать приведенные здесь команды, не вникая в их суть. Здесь</p>\r\n\r\n<p># они служат лишь в качестве примера или шпаргалки. Если вы не</p>\r\n\r\n<p># уверены&nbsp;&mdash; обращайтесь к онлайновой документации. Вы предупреждены.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Конфигурационные директивы сгруппированы в три основные разделы :</p>\r\n\r\n<p>#</p>\r\n\r\n<p># 1. Директивы, управляющие серверным процессом Apache в целом</p>\r\n\r\n<p>#&nbsp;&nbsp; (&laquo;глобальная среда&raquo;).</p>\r\n\r\n<p>#</p>\r\n\r\n<p># 2. Директивы, определяющие параметры &laquo;главного&raquo;</p>\r\n\r\n<p># или дефолтного сервера,</p>\r\n\r\n<p># который отвечает на запросы, не обрабатываемые каким-либо</p>\r\n\r\n<p># виртуальным хостом. Эти директивы также задают дефолтные</p>\r\n\r\n<p># установки для всех виртуальных хостов.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># 3. Установки для виртуальных хостов, позволяющие единым серверным</p>\r\n\r\n<p>#&nbsp;&nbsp; процессом Apache обрабатывать веб-запросы, на самом деле</p>\r\n\r\n<p>#&nbsp; адресованные различным хостам (по имени хоста или по IP).</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Наименования конфиг- и лог-файлов : Если имя файла начинается с &laquo;/&raquo; (или c</p>\r\n\r\n<p># &laquo;диск:/&raquo; под Win32)&nbsp;&mdash; сервер использует явно указанный путь. Если же имя</p>\r\n\r\n<p># НЕ начинается с &laquo;/&raquo;, то к нему префиксируется значение ServerRoot.</p>\r\n\r\n<p># Т.о., если ServerRoot=&quot;/usr/local/apache&quot;, то &laquo;logs/foo.log&raquo; сервер</p>\r\n\r\n<p># интерпретирует как &laquo;/usr/local/apache/logs/foo.log&raquo;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># ПРИМЕЧАНИЕ: При определении имен файлов необходимо использовать прямые</p>\r\n\r\n<p># слэши вместо обратных (т.е. &laquo;c:/apache&raquo; вместо &laquo;c:apache&raquo;).</p>\r\n\r\n<p># Если диск не указан, по умолчанию используется тот, на котором размещен</p>\r\n\r\n<p># Apache.exe. Для однозначности, все же, рекомендуется в абсолютных путях</p>\r\n\r\n<p># всегда четко указывать диск.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p>### Раздел 1: Глобальная среда</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директивы в этом разделе задают общие параметры работы Apache, такие, как,</p>\r\n\r\n<p># например, максимальное число одновременных запросов или</p>\r\n\r\n<p># месторасположение конфиг файлов.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># ServerRoot: Вершина дерева директорий, в которых содержатся конфиг- , лог- и</p>\r\n\r\n<p># error-файлы.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># ПРИМЕЧАНИЕ : Если это дерево будет располагаться на томе монтируемой</p>\r\n\r\n<p># файловой системы NFS (или на другом сетевом ресурсе),</p>\r\n\r\n<p># просьба прочесть описание директивы LockFile</p>\r\n\r\n<p># (по адресу &lt;URL:http://httpd.apache.org/docs-2.0/mod/core.html#lockfile&gt;)</p>\r\n\r\n<p>#&nbsp;&mdash; во избежание массы проблем.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># В конце строки добавлять слэш НЕ следует.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>ServerRoot&nbsp;<code>&quot;E:/Apache2&quot;</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p># ScoreBoardFile: Файл для хранения информации внутреннего процесса сервера.</p>\r\n\r\n<p># Если не указан (по дефолту не указан), то эта информация хранится в</p>\r\n\r\n<p># неименованном разделе общей памяти, и не доступна посторонним программам.</p>\r\n\r\n<p># Если же файл указан, то он должен быть уникальным для каждой отдельной</p>\r\n\r\n<p># инстанции Apache. Этот файл должен располагаться на МЕСТНОМ диске.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#ScoreBoardFile logs/apache_runtime_status</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Файл записи идентификационного номера процесса (PID) сервера при запуске.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>PidFile logs/httpd.pid</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Timeout: Время ожидания в секундах, прежде чем попытки приема или отправления</p>\r\n\r\n<p># выдают сообщение о тайм-ауте.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>Timeout 300</p>\r\n\r\n<p>#</p>\r\n\r\n<p># KeepAlive: Допускаются ли персистентные соединения (см. примечания).</p>\r\n\r\n<p># Для запрета укажите &laquo;Off&raquo;.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>KeepAlive On</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># MaxKeepAliveRequests: Максимальное количество запросов при одном</p>\r\n\r\n<p># персистентном соединении. Значение 0 снимает ограничения. Для максимального</p>\r\n\r\n<p># быстродействия рекомендуем высокое значение.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>MaxKeepAliveRequests 100</p>\r\n\r\n<p>#</p>\r\n\r\n<p># KeepAliveTimeout: Время ожидания (в секундах) следующего запроса от того же</p>\r\n\r\n<p># клиента в рамках одного персистентного соединения</p>\r\n\r\n<p>#</p>\r\n\r\n<p>KeepAliveTimeout 15</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Server-Pool Size Regulation (MPM specific)</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Установка размеров серверного пула. Параметры данного подраздела</p>\r\n\r\n<p># меняются в зависимости от конкретного модуля мультизадачного режима</p>\r\n\r\n<p># (MPM&nbsp;&mdash; Multi-Processing Module), который, в свою очередь, меняется в</p>\r\n\r\n<p># зависимости от конкретной базовой ОС.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># WinNT MPM</p>\r\n\r\n<p># ThreadsPerChild: constant number of worker threads in the server process</p>\r\n\r\n<p># MaxRequestsPerChild: maximum number of requests a server process serves</p>\r\n\r\n<p>#</p>\r\n\r\n<p># WinNT MPM : Мультизадачный модуль для Win32</p>\r\n\r\n<p># ThreadsPerChild: Постоянное число рабочих нитей (тредов) в серверном(sic)</p>\r\n\r\n<p># процессе</p>\r\n\r\n<p># MaxRequestsPerChild: Максимальное количество запросов, обслуживаемых</p>\r\n\r\n<p># серверным(sic) процессом</p>\r\n\r\n<p>#</p>\r\n\r\n<p># (В обоих случаях, речь, на самом деле, идет о дочерних процессах сервера,</p>\r\n\r\n<p># а не о самом серверном процессе. Дело в том, что в случае Win32, который</p>\r\n\r\n<p># как раз здесь рассматривается, запускается один лишь единственный дочерний</p>\r\n\r\n<p># процесс, поэтому для WinNT_MPM эти понятия, в некоторой степени,</p>\r\n\r\n<p># совпадают -пп)</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&lt;IfModule mpm_winnt.c&gt;</p>\r\n\r\n<p>ThreadsPerChild 250</p>\r\n\r\n<p>MaxRequestsPerChild 0</p>\r\n\r\n<p>&lt;/IfModule&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Listen: Позволяет привязать Apache к конкретным адресам IP и/или портам,</p>\r\n\r\n<p># помимо(sic) дефолтных. См. также директиву &lt;VirtualHost&gt;.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Следует поменять это на конкретные адреса IP (как показано ниже), чтобы</p>\r\n\r\n<p># Apache не &laquo;прилипал&raquo; ко всем привязанным адресам (0.0.0.0)</p>\r\n\r\n<p>#</p>\r\n\r\n<p># (Автор здесь немного противоречит себе. Возможно, правильнее второй абзац,</p>\r\n\r\n<p># а первый просто остался по наследству от предыдущих версий. Следует</p>\r\n\r\n<p># отметить, что в отличии от предыдущих версий, директива Listen теперь</p>\r\n\r\n<p># является обязательной&nbsp;&mdash; без нее Apache стартовать не будет -пп).</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#Listen 12.34.56.78:80</p>\r\n\r\n<p>Listen 80</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Поддержка динамических, разделяемых объектов (DSO, Dynamic Shared Object)</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Для того, чтобы использовать модули, созданные как DSO, следует поместить</p>\r\n\r\n<p># здесь соответствующие строки с директивой &laquo;LoadModule&raquo;, чтобы команды этого</p>\r\n\r\n<p># модуля были доступны ДО обращения к ним. Статически скомпилированные модули</p>\r\n\r\n<p># (выявляемые по команде &laquo;httpd -l&raquo;) в этом не нуждаются.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Пример:</p>\r\n\r\n<p># LoadModule foo_module modules/mod_foo.so</p>\r\n\r\n<p>#</p>\r\n\r\n<p>LoadModule access_module modules/mod_access.so</p>\r\n\r\n<p>LoadModule actions_module modules/mod_actions.so</p>\r\n\r\n<p>LoadModule alias_module modules/mod_alias.so</p>\r\n\r\n<p>LoadModule asis_module modules/mod_asis.so</p>\r\n\r\n<p>LoadModule auth_module modules/mod_auth.so</p>\r\n\r\n<p>#LoadModule auth_anon_module modules/mod_auth_anon.so</p>\r\n\r\n<p>#LoadModule auth_dbm_module modules/mod_auth_dbm.so</p>\r\n\r\n<p>#LoadModule auth_digest_module modules/mod_auth_digest.so</p>\r\n\r\n<p>LoadModule autoindex_module modules/mod_autoindex.so</p>\r\n\r\n<p>#LoadModule cern_meta_module modules/mod_cern_meta.so</p>\r\n\r\n<p>LoadModule cgi_module modules/mod_cgi.so</p>\r\n\r\n<p>#LoadModule dav_module modules/mod_dav.so</p>\r\n\r\n<p>#LoadModule dav_fs_module modules/mod_dav_fs.so</p>\r\n\r\n<p>LoadModule dir_module modules/mod_dir.so</p>\r\n\r\n<p>LoadModule env_module modules/mod_env.so</p>\r\n\r\n<p>#LoadModule expires_module modules/mod_expires.so</p>\r\n\r\n<p>#LoadModule file_cache_module modules/mod_file_cache.so</p>\r\n\r\n<p>#LoadModule headers_module modules/mod_headers.so</p>\r\n\r\n<p>LoadModule imap_module modules/mod_imap.so</p>\r\n\r\n<p>LoadModule include_module modules/mod_include.so</p>\r\n\r\n<p>#LoadModule info_module modules/mod_info.so</p>\r\n\r\n<p>LoadModule isapi_module modules/mod_isapi.so</p>\r\n\r\n<p>LoadModule log_config_module modules/mod_log_config.so</p>\r\n\r\n<p>LoadModule mime_module modules/mod_mime.so</p>\r\n\r\n<p>#LoadModule mime_magic_module modules/mod_mime_magic.so</p>\r\n\r\n<p>#LoadModule proxy_module modules/mod_proxy.so</p>\r\n\r\n<p>#LoadModule proxy_connect_module modules/mod_proxy_connect.so</p>\r\n\r\n<p>#LoadModule proxy_http_module modules/mod_proxy_http.so</p>\r\n\r\n<p>#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so</p>\r\n\r\n<p>LoadModule negotiation_module modules/mod_negotiation.so</p>\r\n\r\n<p>#LoadModule rewrite_module modules/mod_rewrite.so</p>\r\n\r\n<p>LoadModule setenvif_module modules/mod_setenvif.so</p>\r\n\r\n<p>#LoadModule speling_module modules/mod_speling.so</p>\r\n\r\n<p>#LoadModule status_module modules/mod_status.so</p>\r\n\r\n<p>#LoadModule unique_id_module modules/mod_unique_id.so</p>\r\n\r\n<p>LoadModule userdir_module modules/mod_userdir.so</p>\r\n\r\n<p>#LoadModule usertrack_module modules/mod_usertrack.so</p>\r\n\r\n<p>#LoadModule vhost_alias_module modules/mod_vhost_alias.so</p>\r\n\r\n<p>#LoadModule ssl_module modules/mod_ssl.so</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директива ExtendedStatus определяет, будет ли Apache выдавать подробную</p>\r\n\r\n<p># информацию о состоянии (ExtendedStatus On), или только общую справку</p>\r\n\r\n<p># (ExtendedStatus Off), при обращении к функции &laquo;server-status&raquo;. Значение по</p>\r\n\r\n<p># умолчанию&nbsp;&mdash; Off.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#ExtendedStatus On</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p>### Раздел 2: Конфигурация &laquo;главного&raquo; (дефолтного) сервера</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директивы этого раздела устанавливают значения, используемые &laquo;главным</p>\r\n\r\n<p># сервером&raquo;, который отвечает на запросы, не обрабатываемые виртуальными</p>\r\n\r\n<p># хостами. Эти значения также задают дефолты для любых последующих</p>\r\n\r\n<p># контейнеров &lt;VirtualHost&gt; в этом файле.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Любые из этих директив могут быть включены в контейнер &lt;VirtualHost&gt;; в таком</p>\r\n\r\n<p># случае дефолтные установки будут переопределены для этого виртуального хоста.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># ServerAdmin: Ваш адрес, по которому следует направлять сообщения о проблемах</p>\r\n\r\n<p># с сервером. Этот адрес появится на некоторых сгенерированных сервером</p>\r\n\r\n<p># страницах, таких, как сообщения об ошибках. Пример: admin@your-domain.com</p>\r\n\r\n<p>#</p>\r\n\r\n<p>ServerAdmin admin@admin.com</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директива ServerName задает имя и порт, которыми сервер представляется.</p>\r\n\r\n<p># Это часто может быть определено автоматически, но рекомендуется явно задавать</p>\r\n\r\n<p># эти параметры, во избежание проблем при запуске.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Если Servername не указывает на действительное DNS-имя вашего хоста,</p>\r\n\r\n<p># переадресация, сгенерированная сервером, не будет работать. См. также</p>\r\n\r\n<p># директиву UseCanonicalName</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Если ваш хост не имеет зарегистрированного DNS-имени, укажите здесь его IP.</p>\r\n\r\n<p># В любом случае вам придется обращаться к нему по адресу, при этом</p>\r\n\r\n<p># переадресация станет разумней.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>ServerName server:80</p>\r\n\r\n<p>#</p>\r\n\r\n<p># UseCanonicalName: Определяет как Apache строит внутренние URL-ссылки и</p>\r\n\r\n<p># значения переменных SERVER_NAME и SERVER_PORT. Когда задано &laquo;Off&raquo;, Apache</p>\r\n\r\n<p># использует имя и порт, данные клиентом. Если же задано &laquo;On&raquo;, то Apache</p>\r\n\r\n<p># использует значение директивы ServerName.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>UseCanonicalName Off</p>\r\n\r\n<p>#</p>\r\n\r\n<p># DocumentRoot: Директория, из которой будут выдаваться ваши документы.</p>\r\n\r\n<p># По умолчанию, все запросы обслуживаются из этой директории, но могут быть</p>\r\n\r\n<p># использованы символические линки (пересылки) и алиасы (псевдонимы) для</p>\r\n\r\n<p># указания других мест.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>DocumentRoot&nbsp;<code>&quot;E:/Apache2/htdocs&quot;</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Каждая доступная для Apache директория может быть сконфигурирована в</p>\r\n\r\n<p># отношении действий и сервисов, которые разрешены и/или запрещены в</p>\r\n\r\n<p># этой директории (и ее суб-директориях).</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Для начала, мы определяем &laquo;дефолт&raquo;, как весьма ограниченный набор разрешений.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&lt;Directory /&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;Options FollowSymLinks</p>\r\n\r\n<p>&nbsp;&nbsp;AllowOverride None</p>\r\n\r\n<p>&lt;/Directory&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Заметьте, что в дальнейшем вы должны явно разрешать конкретные действия так</p>\r\n\r\n<p># что, если что-то не работает так, как вы ожидаете, убедитесь, что вы явно</p>\r\n\r\n<p># разрешили это ниже.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Здесь должна быть указана директория, которую вы установили как DocumentRoot.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&lt;Directory&nbsp;<code>&quot;E:/Apache2/htdocs&quot;&gt;</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p># Опции могут иметь значения &laquo;None&raquo;, &laquo;All&raquo; или любую комбинацию из :</p>\r\n\r\n<p># &laquo;Indexes&raquo;, &laquo;Includes&raquo;, &laquo;FollowSymLinks&raquo;, &laquo;SymLinksifOwnerMatch&raquo;, &laquo;ExecCGI&raquo;,</p>\r\n\r\n<p># и &laquo;Multiviews&raquo;.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Заметьте, что опция &laquo;MultiViews&raquo; должна быть ЯВНО указана&nbsp;&mdash; т.к.</p>\r\n\r\n<p># &laquo;Options All&raquo; ее НЕ включает.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директива Options является и сложной и важной. Для дополнительной информации</p>\r\n\r\n<p># см. &laquo;http://httpd.apache.org/docs-2.0/mod/core.html#options&raquo;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Options Indexes FollowSymLinks</p>\r\n\r\n<p>#</p>\r\n\r\n<p># AllowOverride определяет какие директивы могут быть использованы в файлах</p>\r\n\r\n<p># .htaccess. Она может принимать значения &laquo;All&raquo;, &laquo;None&raquo;, или любую</p>\r\n\r\n<p># комбинацию из : &laquo;Options&raquo;, &laquo;FileInfo&raquo;, &laquo;AuthConfig&raquo;, и &laquo;Limit&raquo;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;AllowOverride None</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Эти директивы определяют, кто может получать материал с этого сервера.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&nbsp;&nbsp;Order allow,deny</p>\r\n\r\n<p>&nbsp;&nbsp;Allow from all</p>\r\n\r\n<p>&lt;/Directory&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># UserDir: Имя директории, которое постфиксируется к имени домашней директории</p>\r\n\r\n<p># пользователя при получении запроса ~user. Будьте особенно внимательны&nbsp;&mdash; здесь</p>\r\n\r\n<p># используются прямые слеши.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>UserDir&nbsp;<code>&quot;My Documents/My Website&quot;</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p># Управляет доступом к директориям UserDir. Приведен пример сайта, где эти</p>\r\n\r\n<p># директории имеют ограничение &laquo;read-only&raquo; (только чтение).</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Исправьте (в следующем) корневой путь, чтобы он соответствовал</p>\r\n\r\n<p># местонахождению директории пользователя в вашей системе, например,</p>\r\n\r\n<p># &laquo;C:/WinNT/profiles/*/My Documents/My Website&raquo;.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#&lt;Directory &laquo;C:/Documents and Settings/*/My Documents/My Website&raquo;&gt;</p>\r\n\r\n<p>#&nbsp; AllowOverride FileInfo AuthConfig Limit</p>\r\n\r\n<p>#&nbsp; Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec</p>\r\n\r\n<p>#&nbsp; &lt;Limit GET POST OPTIONS PROPFIND&gt;</p>\r\n\r\n<p>#&nbsp;&nbsp;&nbsp; Order allow,deny</p>\r\n\r\n<p>#&nbsp;&nbsp;&nbsp; Allow from all</p>\r\n\r\n<p>#&nbsp; &lt;/Limit&gt;</p>\r\n\r\n<p>#&nbsp; &lt;LimitExcept GET POST OPTIONS PROPFIND&gt;</p>\r\n\r\n<p>#&nbsp;&nbsp;&nbsp; Order deny,allow</p>\r\n\r\n<p>#&nbsp;&nbsp;&nbsp; Deny from all</p>\r\n\r\n<p>#&nbsp; &lt;/LimitExcept&gt;</p>\r\n\r\n<p>#&lt;/Directory&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># DirectoryIndex: Имя файла, выдаваемого Apache в ответ на запрос директории.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Файл &laquo;index.html.var&raquo; (типа type-map или application/x-type-map) используется</p>\r\n\r\n<p># для выдачи конкретной разновидности многовариантного документа в зависимости</p>\r\n\r\n<p># от параметров запроса (content-negotiated). Опция MultiViews может служить</p>\r\n\r\n<p># той же цели, но она намного медленее.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>DirectoryIndex index.html index.html.var</p>\r\n\r\n<p>#</p>\r\n\r\n<p># AccessFileName: Имя файла в каждой директории, задающего правила доступа (к</p>\r\n\r\n<p># этой директории). См. также директиву AllowOverride.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AccessFileName .htaccess</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Следующие строки запрещают просмотр файлов &laquo;.htaccess&raquo; и &laquo;.htpasswd&raquo;</p>\r\n\r\n<p># со стороны Web-клиентов.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&lt;Files ~&nbsp;<code>&quot;^.ht&quot;&gt;</code></p>\r\n\r\n<p>&nbsp;&nbsp;Order allow,deny</p>\r\n\r\n<p>&nbsp;&nbsp;Deny from all</p>\r\n\r\n<p>&lt;/Files&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># TypesConfig опеределяет местонахождение файла &laquo;mime.type&raquo; (или ему</p>\r\n\r\n<p># эквивалентного).</p>\r\n\r\n<p>#</p>\r\n\r\n<p>TypesConfig conf/mime.types</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директива DefaultType&nbsp;&mdash; это дефолтный MIME-тип, используемый сервером для</p>\r\n\r\n<p># документов, тип которых не определяем по иным признакам, таким, как</p>\r\n\r\n<p># расширение имени файла. Если ваш сервер содержит в основном текстовые или</p>\r\n\r\n<p># HTML-документы, &laquo;text/plain&raquo; является подходящим значением. Если большая</p>\r\n\r\n<p># часть представляет собой бинарные файлы, такие, как программы или</p>\r\n\r\n<p># изображения, возможно использование &laquo;application/octet-stream&raquo;, чтобы</p>\r\n\r\n<p># предотвратить попытки браузеров показывать содержимое двоичных файлов как</p>\r\n\r\n<p># текст.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>DefaultType text/plain</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Модуль &laquo;mod_mime_magic&raquo; позволяет серверу использовать различные приемы для</p>\r\n\r\n<p># определения типа файла по его содержанию. Директива MIMEMagicFile указывает</p>\r\n\r\n<p># этому модулю месторасположение (файла с описаниями) этих приемов.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&lt;IfModule mod_mime_magic.c&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;MIMEMagicFile conf/magic</p>\r\n\r\n<p>&lt;/IfModule&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># HostnameLookups определяет, записывать ли имена клиентов, или только их</p>\r\n\r\n<p># IP-адреса, например, &laquo;www.apache.org&raquo; (&laquo;On&raquo;) или &laquo;204.62.129.132&raquo;(&laquo;Off&raquo;).</p>\r\n\r\n<p># По дефолту &laquo;Off&raquo;, поскольку в целом для Интернета было бы лучше, если бы</p>\r\n\r\n<p># эта опция включалась сознательно, т.к. ее включение означает, что каждый</p>\r\n\r\n<p># клиентский запрос влечет за собой КАК МИНИМУМ еще один обратный запрос к</p>\r\n\r\n<p># серверу имен.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>HostnameLookups Off</p>\r\n\r\n<p>#</p>\r\n\r\n<p># ErrorLog: Расположение error-файла. Если вы не задаете директиву ErrorLog</p>\r\n\r\n<p># внутри контейнера какого-либо &lt;VirtualHost&gt;, его сообщения об ошибках</p>\r\n\r\n<p># будут записаны здесь. Если же вы определите error-файл для какого-либо</p>\r\n\r\n<p># &lt;VirtualHost&gt;, то его сообщения об ошибках будут записываться там, а не здесь.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>ErrorLog logs/error.log</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># LogLevel: Control the number of messages logged to the error.log.</p>\r\n\r\n<p># Possible values include: debug, info, notice, warn, error, crit,</p>\r\n\r\n<p># alert, emerg.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># LogLevel: Определение количества(sic) ошибок, которые записываются в</p>\r\n\r\n<p># error.log. Возможные значения :</p>\r\n\r\n<p># &laquo;debug&raquo;, &laquo;info&raquo;, &laquo;notice&raquo;, &laquo;warn&raquo;, &laquo;error&raquo;, &laquo;crit&raquo;, &laquo;alert&raquo;, и &laquo;emerg&raquo;.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>LogLevel warn</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Следующие директивы присваивают имена некоторым определениям</p>\r\n\r\n<p># форматов записей, для использования в директиве</p>\r\n\r\n<p># CustomLog (см. ниже).</p>\r\n\r\n<p>#</p>\r\n\r\n<p>LogFormat&nbsp;<code>&quot;%h %l %u %t &quot;%r&quot; %&gt;s %b &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot;&quot; combined</code></p>\r\n\r\n<p>LogFormat&nbsp;<code>&quot;%h %l %u %t &quot;%r&quot; %&gt;s %b&quot; common</code></p>\r\n\r\n<p>LogFormat&nbsp;<code>&quot;%{Referer}i -&gt; %U&quot; referer</code></p>\r\n\r\n<p>LogFormat&nbsp;<code>&quot;%{User-agent}i&quot; agent</code></p>\r\n\r\n<p># (слово access&nbsp;&mdash; здесь как запрос о доступе, а не как доступ&nbsp;&mdash; пп)</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Расположение и формат лог-файла запросов (в общем формате лог-файлов&nbsp;&mdash;</p>\r\n\r\n<p># Common Logfile Format). Если вы не определяете никаких лог-файлов запросов</p>\r\n\r\n<p># внутри контейнера какого-либо &lt;VirtualHost&gt;, сведения будут записываться</p>\r\n\r\n<p># здесь. Если же вы определяете отдельные лог-файлы запросов для каждого(sic)</p>\r\n\r\n<p># &lt;VirtualHost&gt;, то транзакции будут отслеживаться там, а не здесь.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># (Наверное, здесь имеется в виду &laquo;для отдельных&raquo; &lt;VirtualHost&gt;, а не</p>\r\n\r\n<p># &laquo;для каждого&raquo; -пп)</p>\r\n\r\n<p>#</p>\r\n\r\n<p>CustomLog logs/access.log common</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Если вы хотите иметь лог-файлы для отслеживания значений agent и referrer</p>\r\n\r\n<p># (из соответствующих полей поступающих запросов -пп), раскомментируйте</p>\r\n\r\n<p># следующие директивы.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#CustomLog logs/referer.log referer</p>\r\n\r\n<p>#CustomLog logs/agent.log agent</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Если вы предпочитаете единый лог-файл с информацией о запросе, агенте и</p>\r\n\r\n<p># referrer (комбинированный формат лог-файла&nbsp;&mdash; Combined Logfile Format),</p>\r\n\r\n<p># вы можете использовать следующую директиву.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#CustomLog logs/access.log combined</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Добавить дополнительную строчку, содержащую версию сервера и имя виртуального</p>\r\n\r\n<p># хоста на страницах, сгенерированных сервером (таких, как сообщения об</p>\r\n\r\n<p># ошибках, FTP листинги директорий, выдачи модулей &laquo;mod_status&raquo; и &laquo;mod_info&raquo;</p>\r\n\r\n<p># и т.п.; документы, сгенерированные скриптами CGI, к ним не относятся).</p>\r\n\r\n<p># Установите &laquo;EMail&raquo;, чтобы включить еще и линк &laquo;mailto:&raquo;, направленный</p>\r\n\r\n<p># на ServerAdmin.</p>\r\n\r\n<p># Допустимые значения: On | Off | Email</p>\r\n\r\n<p>#</p>\r\n\r\n<p>ServerSignature On</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Алиасы (Псевдонимы): Можно добавлять любое количество алиасов (без</p>\r\n\r\n<p># ограничений). Формат: Alias псевдоним действительное_имя</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Обратите внимание, что если вы включаете завершающий слэш в псевдониме, то</p>\r\n\r\n<p># сервер потребует его наличия и в URL. Так, псевдоним &laquo;/icons&raquo; не определен в</p>\r\n\r\n<p># данном примере, только &laquo;/icons/&raquo;. Если псевдоним закначивается на слеш,</p>\r\n\r\n<p># действительное_имя также должно заканчиваться на слеш, а если псевдоним его</p>\r\n\r\n<p># опускает, то и действительное_имя его должно опустить.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Мы используем алиас &laquo;/icons/&raquo; для листингов директорий типа FancyIndexed.</p>\r\n\r\n<p># Можно закомментировать эту часть, если вы не используете FancyIndexing.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>Alias /icons/&nbsp;<code>&quot;E:/Apache2/icons/&quot;</code></p>\r\n\r\n<p>&lt;Directory&nbsp;<code>&quot;E:/Apache2/icons&quot;&gt;</code></p>\r\n\r\n<p>&nbsp;&nbsp;Options Indexes MultiViews</p>\r\n\r\n<p>&nbsp;&nbsp;AllowOverride None</p>\r\n\r\n<p>&nbsp;&nbsp;Order allow,deny</p>\r\n\r\n<p>&nbsp;&nbsp;Allow from all</p>\r\n\r\n<p>&lt;/Directory&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Следует поменять это значение на (ваш) ServerRoot/manual/. Данный алиас</p>\r\n\r\n<p># обеспечивает доступ к документации, даже если вы передвините свой</p>\r\n\r\n<p># DocumentRoot. Можно эту часть закомментировать, если документация не нужна.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>Alias /manual&nbsp;<code>&quot;E:/Apache2/manual&quot;</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p>&lt;Directory&nbsp;<code>&quot;E:/Apache2/manual&quot;&gt;</code></p>\r\n\r\n<p>&nbsp;&nbsp;Options Indexes FollowSymLinks MultiViews</p>\r\n\r\n<p>&nbsp;&nbsp;AllowOverride None</p>\r\n\r\n<p>&nbsp;&nbsp;Order allow,deny</p>\r\n\r\n<p>&nbsp;&nbsp;Allow from all</p>\r\n\r\n<p>&lt;/Directory&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># ScriptAlias: Указывает директории, которые содержат серверные скрипты.</p>\r\n\r\n<p># Свойства ScriptAlias-ов в основном такие же, как и у простых Alias-ов,</p>\r\n\r\n<p># кроме того, что при запросе, документы в каталоге &laquo;действительное_имя&raquo;</p>\r\n\r\n<p># считаются приложениями и выполняются на сервере, а не отправляются</p>\r\n\r\n<p># клиенту. К директиве ScriptAlias применяются те же правила в отношении</p>\r\n\r\n<p># завершающего &laquo;/&raquo;, что и к Alias.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>ScriptAlias /cgi-bin/&nbsp;<code>&quot;E:/Apache2/cgi-bin/&quot;</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p># Значение &laquo;E:/Apache2/cgi-bin&raquo; следует поменять на существующую директорию</p>\r\n\r\n<p># CGI, указанную в ScriptAlias.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&lt;Directory&nbsp;<code>&quot;E:/Apache2/cgi-bin&quot;&gt;</code></p>\r\n\r\n<p>&nbsp;&nbsp;AllowOverride None</p>\r\n\r\n<p>&nbsp;&nbsp;Options None</p>\r\n\r\n<p>&nbsp;&nbsp;Order allow,deny</p>\r\n\r\n<p>&nbsp;&nbsp;Allow from all</p>\r\n\r\n<p>&lt;/Directory&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директива Redirect позволяет сообщить клиенту о документах, ранее</p>\r\n\r\n<p># существовавших в именном пространстве сервера, но теперь не существующих.</p>\r\n\r\n<p># Она позволяет сообщить клиенту новый адрес перемещенного документа.</p>\r\n\r\n<p># Пример:</p>\r\n\r\n<p># &laquo;Redirect permanent /foo http://www.example.com/bar&raquo;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директивы, управляющие внешним видом листингов директории,</p>\r\n\r\n<p># генерируемых сервером.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># FancyIndexing задает, хотите ли вы стилизованные листинги директорий или</p>\r\n\r\n<p># же стандартные. VersionSort определяет, будут ли файлы с номерами версий</p>\r\n\r\n<p># сравниваться &laquo;естественно&raquo;, т.е. так, чтобы в листинге файл</p>\r\n\r\n<p># &laquo;apache-1.3.9.tar&raquo; предшествовал файлу &laquo;apache-1.3.12.tar&raquo;.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>IndexOptions FancyIndexing VersionSort</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директивы AddIcon* указывают серверу, какие иконы показывать для</p>\r\n\r\n<p># различных файлов, или расширений имен файлов. Они показываются только</p>\r\n\r\n<p># для директорий с FancyIndexing.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-<code>gzip</code></p>\r\n\r\n<p>AddIconByType (TXT,/icons/text.gif) text/*</p>\r\n\r\n<p>AddIconByType (IMG,/icons/image2.gif) image/*</p>\r\n\r\n<p>AddIconByType (SND,/icons/sound2.gif) audio/*</p>\r\n\r\n<p>AddIconByType (VID,/icons/movie.gif) video/*</p>\r\n\r\n<p>AddIcon /icons/binary.gif .bin .exe</p>\r\n\r\n<p>AddIcon /icons/binhex.gif .hqx</p>\r\n\r\n<p>AddIcon /icons/tar.gif .<code>tar</code></p>\r\n\r\n<p>AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv</p>\r\n\r\n<p>AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip</p>\r\n\r\n<p>AddIcon /icons/a.gif .<code>ps .ai .eps</code></p>\r\n\r\n<p>AddIcon /icons/layout.gif .html .shtml .htm .pdf</p>\r\n\r\n<p>AddIcon /icons/text.gif .txt</p>\r\n\r\n<p>AddIcon /icons/c.gif .c</p>\r\n\r\n<p>AddIcon /icons/p.gif .pl .py</p>\r\n\r\n<p>AddIcon /icons/f.gif .<code>for</code></p>\r\n\r\n<p>AddIcon /icons/dvi.gif .dvi</p>\r\n\r\n<p>AddIcon /icons/uuencoded.gif .uu</p>\r\n\r\n<p>AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl</p>\r\n\r\n<p>AddIcon /icons/tex.gif .tex</p>\r\n\r\n<p>AddIcon /icons/bomb.gif core</p>\r\n\r\n<p>AddIcon /icons/back.gif ...</p>\r\n\r\n<p>AddIcon /icons/hand.right.gif README</p>\r\n\r\n<p>AddIcon /icons/folder.gif ^^DIRECTORY^^</p>\r\n\r\n<p>AddIcon /icons/blank.gif ^^BLANKICON^^</p>\r\n\r\n<p>#</p>\r\n\r\n<p># DefaultIcon показывает какую икону показывать для файлов, не имеющих</p>\r\n\r\n<p># явно определенных икон.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>DefaultIcon /icons/unknown.gif</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директива AddDescription позволяет поместить краткое описание после имени</p>\r\n\r\n<p># файла в листингах, сгенерированных сервером. Они показываются только для</p>\r\n\r\n<p># директорий с FancyIndexing.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Формат: AddDescription &laquo;описание&raquo; имя_файла</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#AddDescription &laquo;GZIP compressed document&raquo; .gz</p>\r\n\r\n<p>#AddDescription &laquo;tar archive&raquo; .tar</p>\r\n\r\n<p>#AddDescription &laquo;GZIP compressed tar archive&raquo; .tgz</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># ReadmeName&nbsp;&mdash; это дефолтное имя README-файла, который сервер будет искать по</p>\r\n\r\n<p># умолчанию и добавит в конце листингов директорий.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># HeaderName&nbsp;&mdash; имя файла, который будет добавлен в начале листингов директорий.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>ReadmeName README.html</p>\r\n\r\n<p>HeaderName HEADER.html</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># IndexIgnore&nbsp;&mdash; это список файлов, которые должны быть исключены из</p>\r\n\r\n<p># листингов. В именах файлов допускается использование метасимволов замены в</p>\r\n\r\n<p># стиле shell.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>IndexIgnore .??* *~ *# HEADER* README* RCS CVS *,v *,t</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># AddEncoding позволяет некоторым браузерам (Mosaic/X 2.1+) на ходу</p>\r\n\r\n<p># распаковывать информацию. Замечание: не все браузеры поддерживают это.</p>\r\n\r\n<p># Несмотря на сходство имен, следующие директивы Add* не имеют ничего общего</p>\r\n\r\n<p># с директивами форматирования FancyIndexing, указанными выше.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AddEncoding x-compress Z</p>\r\n\r\n<p>AddEncoding x-<code>gzip gz tgz</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># DefaultLanguage и AddLanguage позволяют указать языки документов. Вы можете</p>\r\n\r\n<p># в последствие использовать динамическое определение содержимого (content</p>\r\n\r\n<p># negotiation) для выдачи браузеру файла на языке понятном пользователю.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Установка языка default. Это означает, что вся информация, идущая без</p>\r\n\r\n<p># конкретного языкового тэга (см. ниже), будет идти на дефолтном языке.</p>\r\n\r\n<p># Вероятно, не стоит задавать эту директиву, не будучи твердо уверенным в том,</p>\r\n\r\n<p># что она подходит для всех случаев.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># * В общем, лучше не указывать определенный язык</p>\r\n\r\n<p># * для страницы, чем задать неправильный язык.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># DefaultLanguage nl</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Примечание 1: Суффикс не обязательно должен совпадать с</p>\r\n\r\n<p># кодом-идентификатором языка. Те, у кого есть документы</p>\r\n\r\n<p># на польском языке (стандартный буквенный</p>\r\n\r\n<p># код Интернета pl), могут воспользоваться директивой</p>\r\n\r\n<p># &laquo;AddLanguage pl .po&raquo; во избежание конфликта с распространенным</p>\r\n\r\n<p># суффиксом скриптов на языке Perl.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Примечание 2: Нижеследующие примеры показывают, что в некоторых</p>\r\n\r\n<p># случаях двухбуквенный код языка не совпадает с двухбуквенным</p>\r\n\r\n<p># кодом соответствующей страны.</p>\r\n\r\n<p># Например, Датский (da) и Дания (dk).</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Примечание 3: В случае &laquo;ltz&raquo; мы нарушаем требования RFC, используя</p>\r\n\r\n<p># трехбуквенный код. Ведется работа по устранению несоответствий и</p>\r\n\r\n<p># усовершенствованию &laquo;rfc1766&raquo;.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Danish, датский (da)</p>\r\n\r\n<p># Dutch, голландский, (nl)</p>\r\n\r\n<p># English, английский (en)</p>\r\n\r\n<p># Estonian, эстонский (et)</p>\r\n\r\n<p># French, французский (fr)</p>\r\n\r\n<p># German, немецкий (de)</p>\r\n\r\n<p># Greek-Modern, новогреческий (el)</p>\r\n\r\n<p># Italian, итальянский (it)</p>\r\n\r\n<p># Norwegian, норвежский (no)</p>\r\n\r\n<p># Norwegian Nynorsk (nn)</p>\r\n\r\n<p># Korean, корейский (kr)</p>\r\n\r\n<p># Portugese, португальский (pt)</p>\r\n\r\n<p># Luxembourgeois*, люксембургский (ltz)</p>\r\n\r\n<p># Spanish, испанский (es)</p>\r\n\r\n<p># Swedish, шведский (sv)</p>\r\n\r\n<p># Catalan, каталанский (ca)</p>\r\n\r\n<p># Czech, чешский(cz)</p>\r\n\r\n<p># Polish, польский (pl)</p>\r\n\r\n<p># Brazilian Portuguese, бразильско-португальский (pt-br)</p>\r\n\r\n<p># Japanese, японскский (ja)</p>\r\n\r\n<p># Russian, русский (ru)</p>\r\n\r\n<p># Croatian, хорватский (hr)</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AddLanguage da .dk</p>\r\n\r\n<p>AddLanguage&nbsp;<code>nl .&lt;code class=&quot;bash functions&quot;&gt;nl</code></p>\r\n\r\n<p>AddLanguage en .en</p>\r\n\r\n<p>AddLanguage et .et</p>\r\n\r\n<p>AddLanguage fr .fr</p>\r\n\r\n<p>AddLanguage de .de</p>\r\n\r\n<p>AddLanguage he .he</p>\r\n\r\n<p>AddLanguage el .el</p>\r\n\r\n<p>AddLanguage it .it</p>\r\n\r\n<p>AddLanguage ja .ja</p>\r\n\r\n<p>AddLanguage pl .po</p>\r\n\r\n<p>AddLanguage kr .kr</p>\r\n\r\n<p>AddLanguage pt .pt</p>\r\n\r\n<p>AddLanguage nn .nn</p>\r\n\r\n<p>AddLanguage no .no</p>\r\n\r\n<p>AddLanguage pt-br .pt-br</p>\r\n\r\n<p>AddLanguage ltz .ltz</p>\r\n\r\n<p>AddLanguage ca .ca</p>\r\n\r\n<p>AddLanguage es .es</p>\r\n\r\n<p>AddLanguage sv .se</p>\r\n\r\n<p>AddLanguage cz .cz</p>\r\n\r\n<p>AddLanguage ru .ru</p>\r\n\r\n<p>AddLanguage tw .tw</p>\r\n\r\n<p>AddLanguage zh-tw .tw</p>\r\n\r\n<p>AddLanguage hr .hr</p>\r\n\r\n<p>#</p>\r\n\r\n<p># LanguagePriority позволяет задать порядок выбора некоторых языков (в случае</p>\r\n\r\n<p># неоднозначности) при динамическом определении содержания (content</p>\r\n\r\n<p># negotiation).</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Просто перечислите языки в порядке убывания приоритета. Здесь они даны в</p>\r\n\r\n<p># более-менее алфавитном порядке. Вероятно, вы захотите изменить этот порядок.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>LanguagePriority en da&nbsp;<code>nl et fr de el it ja kr no pl pt pt-br ltz ca es sv tw</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p># ForceLanguagePriority позволяет вам (серверу) выдать конкретную страницу,</p>\r\n\r\n<p># вместо сообщения MULTIPLE CHOICES (задается Prefer), [в случае неоднозначного</p>\r\n\r\n<p># выбора], или сообщения NOT ACCEPTABLE (задается Fallback)[в случае, если</p>\r\n\r\n<p># не один язык не подошел]</p>\r\n\r\n<p>#</p>\r\n\r\n<p>ForceLanguagePriority Prefer Fallback</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># AddDefaultCharset задает дефолтную таблицу символов (кодировку) для всех</p>\r\n\r\n<p># выдаваемых страниц. Это всегда полезно, и открывает возможность будущей</p>\r\n\r\n<p># мультилингвизации вашего веб сайта. Ее обозначение как дефолтной не</p>\r\n\r\n<p># наносит вреда, т.к. стандарт, в любом случае, определяет, что страница</p>\r\n\r\n<p># использует кодировку iso-8859-1 (latin1), если не указано иначе, т.е. вы</p>\r\n\r\n<p># просто подтверждаете очевидное. Существуют так же соображения о безопасности</p>\r\n\r\n<p># для браузеров, относящиеся к обработке javascript и URL, по которым всегда</p>\r\n\r\n<p># стоит указывать дефолтную кодировку.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AddDefaultCharset WINDOWS-1251</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Часто используемые расширения для обозначения кодировок. Вы, вероятно,</p>\r\n\r\n<p># захотите избежать столкновений с языковыми расширениями, если вы не</p>\r\n\r\n<p># специалист по тщательному тестированию установок после каждого изменения.</p>\r\n\r\n<p># См. &laquo;ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets&raquo; для</p>\r\n\r\n<p># официального списка кодировок и соответствующих им документов RFC.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AddCharset ISO-8859-1 .iso8859-1 .latin1</p>\r\n\r\n<p>AddCharset ISO-8859-2 .iso8859-2 .latin2 .cen</p>\r\n\r\n<p>AddCharset ISO-8859-3 .iso8859-3 .latin3</p>\r\n\r\n<p>AddCharset ISO-8859-4 .iso8859-4 .latin4</p>\r\n\r\n<p>AddCharset ISO-8859-5 .iso8859-5 .latin5 .cyr .iso-ru</p>\r\n\r\n<p>AddCharset ISO-8859-6 .iso8859-6 .latin6 .arb</p>\r\n\r\n<p>AddCharset ISO-8859-7 .iso8859-7 .latin7 .grk</p>\r\n\r\n<p>AddCharset ISO-8859-8 .iso8859-8 .latin8 .heb</p>\r\n\r\n<p>AddCharset ISO-8859-9 .iso8859-9 .latin9 .trk</p>\r\n\r\n<p>AddCharset ISO-2022-JP .iso2022-jp .jis</p>\r\n\r\n<p>AddCharset ISO-2022-KR .iso2022-kr .kis</p>\r\n\r\n<p>AddCharset ISO-2022-CN .iso2022-cn .cis</p>\r\n\r\n<p>AddCharset Big5&nbsp;&nbsp;&nbsp; .Big5&nbsp;&nbsp;&nbsp; .big5</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Для русского языка используется более, чем одна кодировка (в основном,</p>\r\n\r\n<p># зависит от клиента):</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AddCharset WINDOWS-1251 .<code>cp-1251&nbsp; .win-1251</code></p>\r\n\r\n<p>AddCharset CP866&nbsp;&nbsp;&nbsp; .cp866</p>\r\n\r\n<p>AddCharset KOI8-r&nbsp;&nbsp; .koi8-r .koi8-ru</p>\r\n\r\n<p>AddCharset KOI8-ru&nbsp;&nbsp; .koi8-uk .ua</p>\r\n\r\n<p>AddCharset ISO-10646-UCS-2 .ucs2</p>\r\n\r\n<p>AddCharset ISO-10646-UCS-4 .ucs4</p>\r\n\r\n<p>AddCharset UTF-8&nbsp;&nbsp;&nbsp; .utf8</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Ниже приведенный список не соответствует конкретному (iso) стандарту, но</p>\r\n\r\n<p># работает с довольно широким списком браузеров. Заметьте, что верхний регистр,</p>\r\n\r\n<p># на самом деле, имеет значение (этого не должно происходить, но с некоторыми</p>\r\n\r\n<p># браузерами, тем не менее, происходит).</p>\r\n\r\n<p>#</p>\r\n\r\n<p># См. &laquo;ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets&raquo; для своего</p>\r\n\r\n<p># рода списка (кодировок). Но браузеры поддерживают только некоторые из них.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AddCharset GB2312&nbsp;&nbsp; .gb2312 .gb</p>\r\n\r\n<p>AddCharset utf-7&nbsp;&nbsp;&nbsp; .utf7</p>\r\n\r\n<p>AddCharset utf-8&nbsp;&nbsp;&nbsp; .utf8</p>\r\n\r\n<p>AddCharset big5&nbsp;&nbsp;&nbsp; .big5 .b5</p>\r\n\r\n<p>AddCharset EUC-TW&nbsp;&nbsp; .euc-tw</p>\r\n\r\n<p>AddCharset EUC-JP&nbsp;&nbsp; .euc-jp</p>\r\n\r\n<p>AddCharset EUC-KR&nbsp;&nbsp; .euc-kr</p>\r\n\r\n<p>AddCharset shift_jis&nbsp; .sjis</p>\r\n\r\n<p>#</p>\r\n\r\n<p># AddType позволяет добавить новые MIME-типы (или переопределить старые из</p>\r\n\r\n<p># конфигурационного файла &laquo;mime.types&raquo;) для определенных типов файлов.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AddType application/x-tar .tgz</p>\r\n\r\n<p>#</p>\r\n\r\n<p># AddHandler позволяет связать определенные расширения имен файлов с</p>\r\n\r\n<p># обработчиками (handlers), вне зависимости от типа файла.</p>\r\n\r\n<p># Обработчики могут быть либо встроены в сервер, либо добавлены директивой</p>\r\n\r\n<p># Action (см. ниже).</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Для использования скриптов CGI вне директорий типа ScriptAliased :</p>\r\n\r\n<p># (Кроме того, вам придется добавить &laquo;ExecCGI&raquo; к директиве &laquo;Options&raquo;)</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#AddHandler cgi-script .cgi</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Для файлов, которые включают свои HTTP заголовки:</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#AddHandler send-as-is asis</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Для imagemap файлов, обрабатываемых сервером:</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#AddHandler imap-file map</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Для type-maps (динамически определяемых ресурсов):</p>\r\n\r\n<p># Включено по умолчанию, чтобы допустить распространение страницы</p>\r\n\r\n<p># Apache &laquo;It Worked&raquo; (&laquo;Сработало!&raquo;) на различных языках.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>AddHandler&nbsp;<code>type-map var</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Фильтры позволяют обработать содержание до отправки клиенту.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Для обработки .shtml файлов на предмет вставок, производимых сервером</p>\r\n\r\n<p># (server-side includes&nbsp;&mdash; SSI):</p>\r\n\r\n<p># (Кроме того, вам придется добавить &laquo;Includes&raquo; к директиве &laquo;Options&raquo;)</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#AddOutputFilter INCLUDES .shtml</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Action позволяет определить MIME или другие типы (для которых задан</p>\r\n\r\n<p># какой-нибудь handler), при запросе которых выполняется соответствующий</p>\r\n\r\n<p># скрипт. Это устраняет необходимость многократного упоминания URL путей</p>\r\n\r\n<p># часто используемых скриптов CGI.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Format: Action media/type /cgi-script/location</p>\r\n\r\n<p># Format: Action handler-name /cgi-script/location</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Формат: Action&nbsp; название_MIME_типа&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; путь/скрипт</p>\r\n\r\n<p>#&nbsp;&nbsp;&nbsp;&nbsp; Action&nbsp; назавние_типа_или_обработчика(handler)&nbsp; путь/скрипт</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Существует три типа настроек для конфигурируемых сообщений об ошибках:</p>\r\n\r\n<p># 1) простой текст 2) местные ссылки 3) внешние пересылки</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Некоторые примеры:</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#ErrorDocument 500 &laquo;The server made a boo boo.&raquo;</p>\r\n\r\n<p>#ErrorDocument 404 /missing.html</p>\r\n\r\n<p>#ErrorDocument 404 &laquo;/cgi-bin/missing_handler.pl&raquo;</p>\r\n\r\n<p>#ErrorDocument 402 http://www.example.com/subscription_info.html</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Собрав все это воедино, мы можем мультилингвизировать сообщения об ошибках.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Мы используем Alias чтобы перенаправлять сообщения</p>\r\n\r\n<p># &laquo;/error/HTTP_&lt;error&gt;.html.var&raquo; на наборы сообщений на разных языках</p>\r\n\r\n<p># (собранных по типу ошибки). Мы используем &laquo;includes&raquo; для вставления</p>\r\n\r\n<p># необходимого текста.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#&nbsp; Alias /error/include/ &laquo;/your/include/path/&raquo;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Можно изменить вид сообщения, не меняя никаких дефолтных</p>\r\n\r\n<p># &laquo;HTTP_&lt;error&gt;.html.var&raquo; файлов, добавив строку;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#&nbsp; Alias /error/include/ &laquo;/your/include/path/&raquo;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># которая позволяет вам создать свой набор файлов, начав с файлов</p>\r\n\r\n<p># &laquo;E:/Apache2/error/include/&raquo; и копируя их в &laquo;/your/include/path/&raquo;,</p>\r\n\r\n<p># в том числе и для отдельных VirtualHost.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&lt;IfModule mod_negotiation.c&gt;</p>\r\n\r\n<p>&lt;IfModule mod_include.c&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;Alias /error/&nbsp;<code>&quot;E:/Apache2/error/&quot;</code></p>\r\n\r\n<p>&nbsp;&nbsp;&lt;Directory&nbsp;<code>&quot;E:/Apache2/error&quot;&gt;</code></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;AllowOverride None</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Options IncludesNoExec</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;AddOutputFilter Includes html</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;AddHandler&nbsp;<code>type-map var</code></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Order allow,deny</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;Allow from all</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;LanguagePriority en es de fr</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;ForceLanguagePriority Prefer Fallback</p>\r\n\r\n<p>&nbsp;&nbsp;&lt;/Directory&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 400 /error/HTTP_BAD_REQUEST.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 401 /error/HTTP_UNAUTHORIZED.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 403 /error/HTTP_FORBIDDEN.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 404 /error/HTTP_NOT_FOUND.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 405 /error/HTTP_METHOD_NOT_ALLOWED.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 408 /error/HTTP_REQUEST_TIME_OUT.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 410 /error/HTTP_GONE.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 411 /error/HTTP_LENGTH_REQUIRED.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 412 /error/HTTP_PRECONDITION_FAILED.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 413 /error/HTTP_REQUEST_ENTITY_TOO_LARGE.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 414 /error/HTTP_REQUEST_URI_TOO_LARGE.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 415 /error/HTTP_SERVICE_UNAVAILABLE.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 500 /error/HTTP_INTERNAL_SERVER_ERROR.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 501 /error/HTTP_NOT_IMPLEMENTED.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 502 /error/HTTP_BAD_GATEWAY.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 503 /error/HTTP_SERVICE_UNAVAILABLE.html.var</p>\r\n\r\n<p>&nbsp;&nbsp;ErrorDocument 506 /error/HTTP_VARIANT_ALSO_VARIES.html.var</p>\r\n\r\n<p>&lt;/IfModule&gt;</p>\r\n\r\n<p>&lt;/IfModule&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Следующие директивы модифицируют обычное (в ответ на запросы HTTP)</p>\r\n\r\n<p># поведение сервера, с целью предотвращения некоторых известных проблем</p>\r\n\r\n<p># с конкретными браузерами.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>BrowserMatch&nbsp;<code>&quot;Mozilla/2&quot; nokeepalive</code></p>\r\n\r\n<p>BrowserMatch&nbsp;<code>&quot;MSIE 4.0b2;&quot; nokeepalive downgrade-1.0 force-response-1.0</code></p>\r\n\r\n<p>BrowserMatch&nbsp;<code>&quot;RealPlayer 4.0&quot; force-response-1.0</code></p>\r\n\r\n<p>BrowserMatch&nbsp;<code>&quot;Java/1.0&quot; force-response-1.0</code></p>\r\n\r\n<p>BrowserMatch&nbsp;<code>&quot;JDK/1.0&quot; force-response-1.0</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Следующая директива блокирует переадресацию по запросу</p>\r\n\r\n<p># (не использующую метод GET) для директории, не заканчивающейся</p>\r\n\r\n<p># на слэш. Это решает проблему с пакетом &laquo;Microsoft WebFolders&raquo;,</p>\r\n\r\n<p># который неправильно обрабатывает пересылки для папок методами</p>\r\n\r\n<p># DAV (коллективная система удаленного создания и контроля</p>\r\n\r\n<p># версий документов).</p>\r\n\r\n<p>#</p>\r\n\r\n<p>BrowserMatch&nbsp;<code>&quot;Microsoft Data Access Internet Publishing Provider&quot; redirect-carefully</code></p>\r\n\r\n<p>BrowserMatch&nbsp;<code>&quot;^WebDrive&quot; redirect-carefully</code></p>\r\n\r\n<p>#</p>\r\n\r\n<p># Разрешить выдачу сообщений-отчетов о состоянии сервера по запросу на URL</p>\r\n\r\n<p># &laquo;http://servername/server-status&raquo; . Замените &laquo;.admin.admin.com&raquo; на имя</p>\r\n\r\n<p># своего домена для включения.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#&lt;Location /server-status&gt;</p>\r\n\r\n<p>#&nbsp; SetHandler server-status</p>\r\n\r\n<p>#&nbsp; Order deny,allow</p>\r\n\r\n<p>#&nbsp; Deny from all</p>\r\n\r\n<p>#&nbsp; Allow from .admin.admin.com</p>\r\n\r\n<p>#&lt;/Location&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Разрешить выдачу сообщений-отчетов о конфигурации удаленного сервера по</p>\r\n\r\n<p># запросу на URL &laquo;http://servername/server-info&raquo; . Замените &laquo;.your-domain.com&raquo;</p>\r\n\r\n<p># на имя своего домена для включения.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#&lt;Location /server-info&gt;</p>\r\n\r\n<p>#&nbsp; SetHandler server-info</p>\r\n\r\n<p>#&nbsp; Order deny,allow</p>\r\n\r\n<p>#&nbsp; Deny from all</p>\r\n\r\n<p>#&nbsp; Allow from .admin.admin.com</p>\r\n\r\n<p>#&lt;/Location&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Директивы прокси-сервера. Раскомментируйте следующие строки, чтобы включить</p>\r\n\r\n<p># прокси-сервер.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#&lt;IfModule mod_proxy.c&gt;</p>\r\n\r\n<p>#ProxyRequests On</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#&lt;Proxy *&gt;</p>\r\n\r\n<p>#&nbsp; Order deny,allow</p>\r\n\r\n<p>#&nbsp; Deny from all</p>\r\n\r\n<p>#&nbsp; Allow from .your-domain.com</p>\r\n\r\n<p>#&lt;/Proxy&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Включить/выключить обработку заголовков &laquo;HTTP/1.1&raquo; типа &laquo;Via:&raquo; (через)</p>\r\n\r\n<p># (Опция &laquo;Full&raquo; добавляет номер версии сервера, &laquo;Block&raquo; отменяет все исходящие</p>\r\n\r\n<p># заголовки типа &laquo;Via:&raquo;.</p>\r\n\r\n<p># Возможные варианты: Off | On | Full | Block</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#ProxyVia On</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Чтобы включить еще и кэширование, откорректируйте и раскомментируйте</p>\r\n\r\n<p># следующие строки</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#CacheRoot &laquo;E:/Apache2/proxy&raquo;</p>\r\n\r\n<p>#CacheSize 5</p>\r\n\r\n<p>#CacheGcInterval 4</p>\r\n\r\n<p>#CacheMaxExpire 24</p>\r\n\r\n<p>#CacheLastModifiedFactor 0.1</p>\r\n\r\n<p>#CacheDefaultExpire 1</p>\r\n\r\n<p>#NoCache a-domain.com another-domain.edu joes.garage-sale.com</p>\r\n\r\n<p>#&lt;/IfModule&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Конец директив прокси сервера.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Включить дополнительные конфиг-файлы для отдельных модулей</p>\r\n\r\n<p>#</p>\r\n\r\n<p>&lt;IfModule mod_ssl.c&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;Include conf/ssl.conf</p>\r\n\r\n<p>&lt;/IfModule&gt;</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p>###Раздел 3: Виртуальные хосты</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># VirtualHost: Если вы хотите держать множество доменов/хостов на своей машине,</p>\r\n\r\n<p># то задайте для них контейнеры VirtualHost. Большинство конфигураций задает</p>\r\n\r\n<p># только имена виртуальных хостов, с тем, чтобы серверу не требовались</p>\r\n\r\n<p># IP адреса. Данное обстоятельство обозначено звездочками (*) в следующих</p>\r\n\r\n<p># директивах.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># См. документацию по адресу &lt;URL:http://httpd.apache.org/docs-2.0/vhosts/&gt;</p>\r\n\r\n<p># для дополнительной информации, прежде чем создавать виртуальные хосты.</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Вы можете воспользоваться ключом &laquo;-S&raquo; для командной строки, чтобы выявить</p>\r\n\r\n<p># конфигурацию ваших виртуальных хостов.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Использовать виртуальные хосты по их именам.</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#NameVirtualHost *</p>\r\n\r\n<p>#</p>\r\n\r\n<p>#</p>\r\n\r\n<p># Пример виртуального хоста.</p>\r\n\r\n<p># Почти любые директивы Apache могут входить в контейнер VirtualHost.</p>\r\n\r\n<p># Первый VirtualHost используется для запросов, направленных на</p>\r\n\r\n<p># неизвестное имя сервера</p>\r\n\r\n<p>#&lt;VirtualHost *&gt;</p>\r\n\r\n<p>#&nbsp; ServerAdmin webmaster@dummy-host.example.com</p>\r\n\r\n<p>#&nbsp; DocumentRoot /www/docs/dummy-host.example.com</p>\r\n\r\n<p>#&nbsp; ServerName dummy-host.example.com</p>\r\n\r\n<p>#&nbsp; ErrorLog logs/dummy-host.example.com-error_log</p>\r\n\r\n<p>#&nbsp; CustomLog logs/dummy-host.example.com-access_log common</p>\r\n\r\n<p>#&lt;/VirtualHost&gt;</p>\r\n', '<p>Перевод файла httpd.conf на русский язык с пояснениями</p>\r\n');
INSERT INTO `articles` (`id`, `articles_name`, `article_text`, `short_text`) VALUES
(23, '<h1>Настройка .htaccess</h1>\r\n', '<p><strong>.htaccess</strong>&nbsp;(с точкой в начале имени) - это файл-конфигуратор Apache-серверов, который дает возможность конфигурировать работу сервера в отдельных директориях (папках), не предоставляя доступа к главному конфигурационному файлу. Например, устанавливать права доступа к файлам в директории, менять названия индексных файлов, самостоятельно обрабатывать ошибки Apache, перенаправляя посетителей на специальные страницы ошибок.&nbsp;<strong>.htaccess</strong>&nbsp;представляет собой обычный текстовый документ, расширение которого htaccess. Данный файл обычно находится в корне сайта, однако Вы можете создавать и дополнительные .htaccess-файлы для различных директорий Вашего сайта.</p>\r\n\r\n<h2>Варианты реализации Редиректа с помощью файла .htaccess</h2>\r\n\r\n<ol>\r\n	<li>Простой редирект:\r\n	<pre>\r\nRedirect 301 / http://www.domain.ru/\r\n</pre>\r\n	или\r\n\r\n	<pre>\r\nredirect /secret http://www.site.ru/nosecret\r\n</pre>\r\n	Ставится в файле&nbsp;<strong>.htaccess</strong>&nbsp;или&nbsp;<strong>httpd.conf</strong>&nbsp;для Apache. Первый &quot;/&quot; означает, что всё с верхнего уровня сайта, включая все подкаталоги, будет переадресовано (не забывайте поставить последний &quot;/&quot;). Если Вы хотите переадресовать только страницу, сохранив PR старой страницы, можно сделать так:\r\n\r\n	<p>Redirect 301 /old/old.htm http://www.domain.ru/new.htm где:<br />\r\n	/old/old.htm - путь и имя старой страницы<br />\r\n	http://www.domain.com/new.htm - новый путь и новое имя перемещенной страницы</p>\r\n	</li>\r\n	<li>Редирект на любую страницу по ip пользователя или при запросе конкретной страницы (а также по маске имени).<br />\r\n	Если у пользователя ip 192.152.37.125, то он будет перенаправлен на страницу user.php:\r\n	<pre>\r\nSetEnvIf REMOTE_ADDR 192.152.37.125 REDIR=&quot;redir&quot;\r\nRewriteCond %{REDIR} redir\r\nRewriteRule ^/$ /user.php\r\n</pre>\r\n	</li>\r\n	<li>Редирект при запросе определённых файлов. Если запрашиваются файлы, расширение которых не указано в файле .htaccess (gif и jpg), то следует перенаправление:\r\n	<pre>\r\nRewriteEngine On\r\nRewriteRule !.(gif|jpg)$ index.php\r\n</pre>\r\n	</li>\r\n	<li>Использование mod_rewrite:\r\n	<pre>\r\nOptions +FollowSymLinks\r\nRewriteEngine on\r\nRewriteCond %{HTTP_HOST} ^domain.ru\r\nRewriteRule ^(.*)$ http://www.domain.ru/$1 [R=permanent,L]\r\n</pre>\r\n	</li>\r\n	<li>Редирект с регулярным выражением:\r\n	<pre>\r\nRedirectMatch 301 (.*) http://www.domain.ru$1 Прописывается в файле .htaccess.\r\n</pre>\r\n	(.*)&nbsp;<strong>RedirectMatch</strong>&nbsp;фактически соответствует регулярным образцам выражения после доменного имени. Таким образом, нельзя выполнить соответствие образца на ^/domain.ru. Однако, можно преобразовать страницы с использованием .html расширения к файлам того же самого названия, но с .php расширением:\r\n\r\n	<pre>\r\nRedirectMatch 301 (.*).html$ http://www.domain.ru$1.php\r\n</pre>\r\n	Если необходимо сделать различное перенаправление для отдельных страниц, можно использовать следующее:\r\n\r\n	<pre>\r\nRedirectMatch Permanent ^/html/resources.html$ http://www.domain.com/resources.php\r\nRedirectMatch Permanent ^/html/other_page.html$ http://www.domain.com/other_page.php\r\nRedirectMatch Permanent ^/(.*)$ http://www.domain.com/\r\n</pre>\r\n	&quot;<strong>RedirectMatch Permanent</strong>&quot; - это эквивалент &quot;RedirectMatch 301&quot;, строка с &quot;*(Wildcard)&quot; должна быть последней в этом списке.<br />\r\n	&nbsp;</li>\r\n	<li>Создание удобо читаемых URL<br />\r\n	Чтобы преобразовать, например, www.domain.ru/product.php?id=123 в www.domain.ru/product/123 следующим образом:\r\n	<pre>\r\nRewriteEngine on\r\nRewriteRule ^product/([^/.]+)/?$ product.php?id=$1 [L]\r\n</pre>\r\n	В следующем примере преобразуем www.domain.ru/script.php?product=123 в www.domain.ru/cat/product/123/:\r\n\r\n	<pre>\r\nRewriteRule cat/(.*)/(.*)/$ /script.php?$1=$2\r\n</pre>\r\n	</li>\r\n	<li>Редирект на PHP:\r\n	<pre>\r\nheader(&quot;HTTP/1.1 301 Moved Permanently&quot;);\r\nheader(&quot;Location: http://www.domain.ru/newdir/newpage.htm&quot;);\r\nexit();\r\n</pre>\r\n	Естественно, надо создать страницу, при обращении к которой и будет происходить Редирект, и разместить её на сервере. И лучше укажите HTTP/1.1 (а не HTTP/1.0 или HTTP/0.9, которые не поддерживают виртуальный хостинг)<br />\r\n	&nbsp;</li>\r\n	<li>Редирект всех файлов в папке на один файл.<br />\r\n	Например вы больше не нуждаетесь в разделе сайта Files и хотите перенаправить все запросы к папке /files на один файл /page.php. Для этого добавляем в .htaccess следующий код.\r\n	<pre>\r\nRewriteRule ^files(.*)$ /page.php [L,R=301]\r\n</pre>\r\n	</li>\r\n	<li>Редирект всей папки кроме одного файла<br />\r\n	В следующем примере все файлы из папки /files будут редиректится на на файл /page.php, &nbsp;кроме файла /files/test.html котоый должен редиректится на /test-1.html\r\n	<pre>\r\nRewriteRule ^files/test.html /test-1.html [L,R=301]\r\nRewriteRule ^files(.*)$ /page.php [L,R=301]\r\n</pre>\r\n	</li>\r\n	<li>Редирект динамического URL на новый файл.<br />\r\n	Данный вариант пригодится если вы хотите редиректить динамический URL с параметрами на новый статический файл.\r\n	<pre>\r\nRewriteRule ^article.jsp?id=(.*)$ /test.htm [L,R=301]\r\n</pre>\r\n	То есть теперь, запрос к файлу вида http://www.domain.ru/article.jsp?id=8547 и/или http://www.domain.ru/article.jsp?id=1234 &nbsp;будет отправлен на файл http://www.domain.ru/test.htm.<br />\r\n	&nbsp;</li>\r\n	<li>Массовый редирект новых файлов.<br />\r\n	Тепепь перейдем к самому сложному моменту, когда вам надо редиректить массу URL-ов, например после смены вашей CMS. Тут сразу возникает ряд проблем. Во-первых, внесение всех изменившихся адресов в .htaccess файл займет очень много времени, да и само по себе занятие малоприятное. Во-вторых, слишком много записей в .htaccess файле будут тормозить Apache сервера. И в третьих, при внесении такого количества информации высока вероятность, что вы где то ошибетесь. По этому, самый лучший выход, это нанять програмиста который вам напишет динамический редирект.<br />\r\n	Нижеприведенный пример написан на PHP, но так же может быть выполнен на любом языке. Предположим вы перешли на новую систему ссылок на вашем сайте и все файлы оканчивающиеся на старый id должны быть средирекчены. Сначала создаем в базе таблицу, которая содержит старый id и новый URL для редиректа. old_id INT new_url VARCHAR (255) Далее пишем код который свяжет ваши старые id с новыми URL-ами<br />\r\n	После этого, добавляем следующую строчку в .htaccess:\r\n	<pre>\r\nRewriteRule ^/product-(.*)_([0-9]+).php /redirectold.php?productid=$2\r\n</pre>\r\n	затем создаем PHP файл redirectold.php, который будет поддерживать 301 редирект:\r\n\r\n	<pre>\r\n&lt;?php\r\nfunction getRedirectUrl($productid) {\r\n// Connect to the database\r\n$dServer = &quot;localhost&quot;;\r\n$dDb = &quot;mydbname&quot;;\r\n$dUser = &quot;mydb_user&quot;;\r\n$dPass = &quot;password&quot;;\r\n\r\n$s = @mysql_connect($dServer, $dUser, $dPass)\r\nor die(&quot;Couldn&#39;t connect to database server&quot;);\r\n\r\n@mysql_select_db($dDb, $s)\r\nor die(&quot;Couldn&#39;t connect to database&quot;);\r\n\r\n$query = &quot;SELECT new_url FROM redirects WHERE old_id = &quot;. $productid;\r\nmysql_query($query);\r\n$result = mysql_query($query);\r\n$hasRecords = mysql_num_rows($result) == 0 ? false : true;\r\nif (!$hasRecords) {\r\n$ret = &#39;http://www.yoursite.com/&#39;;\r\n} else {\r\nwhile($row = mysql_fetch_array($result))\r\n{\r\n$ret = &#39;http://www.yoursite.com/&#39;. $row[&quot;new_url&quot;];\r\n}\r\n}\r\nmysql_close($s);\r\nreturn $ret;\r\n}\r\n\r\n$productid = $_GET[&quot;productid&quot;];\r\n$url = getRedirectUrl($productid);\r\n\r\nheader(&quot;HTTP/1.1 301 Moved Permanently&quot;);\r\nheader(&quot;Location: $url&quot;);\r\nexit();\r\n?&gt;\r\n</pre>\r\n\r\n	<p>Теперь все запросы к вашим старым URL-ам будут вызывать redirectold.php, который найдет новый URL и вернет 301 ответ с вашей новой ссылкой.</p>\r\n	</li>\r\n</ol>\r\n', '<p>Осуществление&nbsp;перенаправления с помощью файла .htaccess</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n'),
(26, '<h1>htaccess</h1>\r\n', '<h2>Расположение .htaccess</h2>\r\n\r\n<p>Данный файл помещается в корневой папке, поэтому он влияет на содержимое всех вложенных в нее папок. Если необходимо отдельно настроить какой-либо каталог, в него также помещается еще один .htaccess. Для этого каталога он будет иметь больший приоритет в сравнении с общим файлом, расположенным в корневой папке. Для доступа к содержимому сервера используется любой файловый менеджер вроде Total Commander, FileZilla. Если у хостинг-провайдера, услугами которого вы пользуетесь, в системе управления уже имеется подобная программа-клиент, он сможет открыть все файлы.</p>\r\n\r\n<h2>Назначение .htaccess</h2>\r\n\r\n<p>Файл .htaccess используется главным образом для изменений настроек сайта и каталогов с учетом специальных требований. С его помощью можно настраивать веб-сервер, не имея прав администратора, что расширяет и делает более гибкими возможности SEO-специалистов и программистов.</p>\r\n\r\n<p>.htaccess дополняет основной файл настроек httpd.conf, который отличается более жесткими ограничениями прав доступа из-за содержащихся в нем параметров, оказывающих непосредственное влияние на жизнеспособность сервера. Изменения в файле-помощнике вступают в силу непосредственно после его загрузки, а корректировки в основном документе актуализируются только после перезагрузки сервера.</p>\r\n\r\n<p>.htaccess обеспечивает выполнение следующих рабочих операций:</p>\r\n\r\n<ol>\r\n	<li>настройки редиректов &ndash; в частности, для перенаправления пользователя со старых страниц на новые при изменении домена;</li>\r\n	<li>переадресации с www на без www либо после установки ssl-сертификата на https;</li>\r\n	<li>обработки багов, включая ошибку 404 с заменой битой ссылки работающей страницей;</li>\r\n	<li>повышения производительности сайта с использованием кэширования .htaccess;</li>\r\n	<li>создания семантических URL, интуитивно понятных пользователям;</li>\r\n	<li>изменения кода веб-страниц;</li>\r\n	<li>предоставления доступа к данным с применением аутентификации.</li>\r\n</ol>\r\n', '<p>Что такое файл&nbsp;.htaccess</p>\r\n'),
(21, '<p>ФАЙЛ <strong>HTTPD.CONF</strong></p>\r\n', '<p>Файл<strong>&nbsp;httpd.conf</strong>&nbsp;содержит конфигурацию сервера. Откройте его в редакторе и измените указанные ниже строки, если это необходимо. Приведенные ниже описания послужат вам в качестве указаний. Они не являются исчерпывающими инструкциями, однако затрагивают те изменения, которые вам, возможно, придется внести, чтобы заставить сервер работать. Единственной строкой, которую вы&nbsp;<em>обязаны,</em>&nbsp;изменить, является строка, начинающаяся с&nbsp;⌠ServerAdmin.&nbsp;Остальным директивам по умолчанию присвоены разумные значения, поэтому взгляните на них, чтобы убедиться в правильности значений, но вносить в них изменения вряд ли потребуется.</p>\r\n\r\n<p><em>ServerType</em></p>\r\n\r\n<p>Для этой директивы значением по умолчанию является&nbsp;<em>ServerType standalone.</em>&nbsp;Серверы, работающие в автономном режиме&nbsp;<em>(standalone),</em>&nbsp;запускаются из загрузочных сценариев при запуске системы. Такая установка рекомендуется для улучшения производительности.</p>\r\n\r\n<p>Серверу&nbsp;Apache&nbsp;(как и большинству традиционных серверов&nbsp;UNIX)&nbsp;для каждого соединения требуется запускать отдельную копию. Система&nbsp;UNIX&nbsp;оптимизирована специально для такого поведения, и накладные расходы на создание процессом собственной копии невелики. После запуска сервер, работающий в автономном режиме, начинает прослушивание на предмет наличия запросов на соединение. Обнаружив такой запрос, сервер ⌠раздваивается&nbsp;для его обслуживания. Когда копия заканчивает работу, она завершается. Эту основную модель можно изменить при помощи директив&nbsp;<strong>StartServers</strong>&nbsp;и<strong>&nbsp;MaxServers,</strong>&nbsp;как объясняется ниже.</p>\r\n\r\n<p>В качестве альтернативы режиму&nbsp;standalone&nbsp;можно воспользоваться услугами демона&nbsp;<em>inetd.</em>&nbsp;В системах&nbsp;UNIX inetd&nbsp;представляет собой суперсервер. Большинство сетевых служб используется относительно редко по сравнению с десятками соединений в секунду, обслуживаемых занятыми HTTP-серверами. Даже такая популярная служба, как&nbsp;Telnet,&nbsp;обычно осуществляет не более одного соединения каждые несколько минут. Если для каждой из возможных сетевых служб запускать отдельный автономный сервер, это будет равносильно неоправданной растрате таких ценных системных ресурсов, как процессорное время и оперативная память.&nbsp;Решением этой проблемы для&nbsp;UNIX&nbsp;является использование демона inetd. Файл<strong>&nbsp;/etc/inetd.conf</strong>&nbsp;содержит список сетевых служб, за которые отвечает inetd. Этот демон использует для определения номера сетевого порта, связанного с каждой из конкретных служб, файл<strong>&nbsp;/etc/services</strong>&nbsp;и производит прослушивание этих портов на предмет появления запросов на соединения. При появлении запроса демон запускает для его обработки соответствующий сервер.</p>\r\n\r\n<p>Хотя такой механизм идеален для сравнительно редко используемых служб, протокол&nbsp;HTTP&nbsp;не следует этой модели. Поскольку для каждой HTML-страницы, для каждого встроенного изображения и любого другого объекта, запрашиваемого пользователем, требуется отдельное соединение и, следовательно, отдельная копия сервера, то каждую минуту, если не каждую секунду, будет осуществляться несколько новых соединений.</p>\r\n\r\n<p>Кроме того, сервер&nbsp;Apache&nbsp;должен считывать информацию из файла конфигурации и производить ее синтаксический разбор при каждом запуске своей копии демоном inetd. Такие накладные расходы неприемлемы, если ожидается, что ваш Web-узел будет достаточно занятым. Практически для&nbsp;каждого HTTP-сервера следует использовать в этой директиве режим&nbsp;standalone.</p>\r\n\r\n<p>Port</p>\r\n\r\n<p>В этой директиве задается номер сетевого порта, на котором будет работать ваш сервер, если он запущен в автономном режиме (если используется&nbsp;inetd,&nbsp;то номер порта следует задать в файле<strong>&nbsp;/etc/services).</strong></p>\r\n\r\n<p>Значением по умолчанию для этой директивы является&nbsp;<em>Port 80.</em>&nbsp;К этому порту Web-броузеры пытаются подключиться по умолчанию, и он является стандартным портом для протокола&nbsp;HTTP&nbsp;и рекомендуется для использования на основном сервере вашего Web-узла. Если вы хотите запустить сервер на этом порту или на любом другом, номер которого меньше 1024, то вам потребуются привилегии суперпользователя&nbsp;(root).</p>\r\n\r\n<p>Если вы не обладаете в этой системе привилегиями суперпользователя, то все-таки остается возможность запустить Web-сервер на порту с номером, превосходящим 1024. Вам только придется объявить об этом и включить номер порта в адрес&nbsp;URL; обычно используют номера 8000 или 8080. В дальнейшем предполагается, что вы обладаете правами суперпользователя в своей системе, и сервер запущен на порту, принятом по умолчанию.</p>\r\n\r\n<p><em>HostnameLookups</em></p>\r\n\r\n<p>В целях наблюдения за деятельностью пользователей сервер&nbsp;Apache&nbsp;ведет серию журнальных файлов, которые мы обсудим позднее. В одном из них ведется учет компьютеров, осуществивших доступ к серверу. Директива&nbsp;<em>HostnameLookups</em>&nbsp;указывает, записывается ли в журнальный файл имя компьютера (например,<strong>&nbsp;macl.shoop.com)</strong>&nbsp;или только его IP-адрес (например, 152.2.22.81). По умолчанию сервер сохраняет имя компьютера, но если ожидаемый объем графика очень велик, отключение опции&nbsp;HostnameLookups&nbsp;позволит немного уменьшить нагрузку на сервер. Это делается простым изменением строки на&nbsp;⌠HostnameLookups off.</p>\r\n\r\n<p><em>User</em>&nbsp;и&nbsp;Group</p>\r\n\r\n<p>Эти параметры задают действительные идентификаторы пользователя и группы, которые присваиваются серверу, работающему в автономном режиме. (Если используется inetd, большинство систем&nbsp;UNIX&nbsp;требует указать идентификатор пользователя в файле<strong>&nbsp;/etc/inetd-conf).</strong>&nbsp;Можно задавать как имена, так и их числовые эквиваленты, которые можно найти в файлах<strong>&nbsp;/etc/passwd&nbsp;и&nbsp;/etc/group</strong>&nbsp;соответственно.</p>\r\n\r\n<p>По умолчанию в качестве имени пользователя принимается&nbsp;nobody,&nbsp;что является превосходным выбором с точки зрения защиты информации. Такое имя гарантирует, что Web-сервер получит доступ только к тем файлам, к которым разрешен доступ на чтение для всех пользователей. Альтернативой является создание в системе специального пользователя и использование для работы Web-сервера его идентификатора. Какой бы идентификатор ни&nbsp;использовался, следует убедиться, что для него не существует доступа к системе через интерфейс командной строки. Ни в коем случае нельзя запускать сервер с привилегиями суперпользователя&nbsp;<em>(root).</em></p>\r\n\r\n<p>В качестве идентификатора группы следует использовать идентификатор какой-нибудь нейтральной группы, имеющейся в системе. Часто используется группа&nbsp;<em>news.</em>&nbsp;Либо можно специально создать для сервера новую группу.</p>\r\n\r\n<p>Обратите внимание, что для начинающего вебмастера именно эти директивы обычно представляют трудности. Если указанные пользователь и группа не существуют в системе, сервер не будет работать. Для директивы&nbsp;Group,&nbsp;например, по умолчанию принято значение<strong>&nbsp;&asymp;1,</strong>&nbsp;что во многих системах не является разрешенным идентификатором группы.</p>\r\n\r\n<p><em>ServerAdmin</em></p>\r\n\r\n<p>Это официальный электронный адрес вебмастера вашего Web-узла. Обычно используется адрес в форме&nbsp;WebMaster@ваш_cepвep, где&nbsp;<em>ваш_сервер&nbsp;</em>является хорошо известным именем вашего сервера. При этом адрес останется неизменным, даже если сменится вебмастер.</p>\r\n\r\n<p>Этот адрес необходимо добавить в поддерживаемую почтовым сервером базу данных псевдонимов, находящуюся в файле<strong>&nbsp;/etc/aliases.</strong>&nbsp;Воспользовавшись привилегиями суперпользователя, добавьте в этот файл следующую строку:</p>\r\n\r\n<p>webmaster: name</p>\r\n\r\n<p>Вместо слова&nbsp;<em>имя</em>&nbsp;введите регистрационное имя пользователя, который будет заниматься обслуживанием вашего Web-сервера. Затем выполните следующую команду:</p>\r\n\r\n<p># newaliases</p>\r\n\r\n<p>В результате база данных псевдонимов будет перестроена.</p>\r\n\r\n<p><em>ServerRoot</em></p>\r\n\r\n<p>В этой директиве задается базовый каталог, в котором будет установлено программное обеспечение HTTP-сервера&nbsp;Apache.&nbsp;По умолчанию это каталог<strong>&nbsp;/usr/local/etc/httpd.</strong>&nbsp;Если вы до сих пор следовали нашим инструкциям, вам не придется менять эту строку.</p>\r\n\r\n<p><em>BindAddress</em></p>\r\n\r\n<p>Эта директива используется только для компьютеров, имеющих более одного IP-адреса. С ее помощью можно устанавливать, прослушивание какого из IP-адресов компьютера сервер будет производить на предмет поступления запросов. Большинство компьютеров имеют один IP-адрес.</p>\r\n\r\n<p>Вопросы настройки компьютеров с большим числом адресов и несколькими серверами обсуждаются ниже, в разделе ⌠Развернутая конфигурация&nbsp;на стр. 108. По умолчанию эта директива закомментирована, и сервер производит прослушивание всех адресов компьютера.</p>\r\n\r\n<p><em>ErrorLog&nbsp;и&nbsp;TransferLog</em></p>\r\n\r\n<p>При помощи этих двух директив задается местоположение журнальных файлов, в которых регистрируются ошибки и попытки доступа к серверу соответственно. Сервер подразумевает, что имена, начинающиеся не с косой черты (/), отсчитываются от каталога&nbsp;ServerRoot.</p>\r\n\r\n<p>Эти журнальные файлы весьма просты. В файле, указанном в директиве&nbsp;ErrorLog,&nbsp;сервер сохраняет сообщения диагностики, включая сообщения об ошибках, выдаваемые сценариями&nbsp;CGI.&nbsp;В файле, указанном в директиве&nbsp;TransferLog,&nbsp;сервер сохраняет все запросы клиентов. Если включена описанная выше опция&nbsp;HostnameLookups,&nbsp;то вместе с запросами регистрируются имена компьютеров. Если опция выключена, то регистрируются только IP-адреса компьютеров клиентов.</p>\r\n\r\n<p>Вряд ли у вас возникнет необходимость (или желание) изменять значения в этих директивах.</p>\r\n\r\n<p><em>PidFile&nbsp;и&nbsp;ScoreBoardFile</em></p>\r\n\r\n<p>Если сервер работает в автономном режиме, то в директиве PidFile задается имя файла, в котором исходный процесс-сервер регистрируется, указывая свой идентификационный номер. Эту информацию можно использовать для завершения или перезапуска сервера.</p>\r\n\r\n<p>Директива ScoreBoardFile позволяет серверу&nbsp;Apache&nbsp;следить за собственной производительностью. Об использовании директивы ScoreBoardFile мы подробнее поговорим при рассмотрении модуля&nbsp;Status. Вряд ли у вас возникнет необходимость (или желание) изменять значения и в этих директивах.</p>\r\n\r\n<p><em>ServerName</em></p>\r\n\r\n<p>В этой строке должно стоять официальное имя вашего сервера в том виде, в котором оно появляется в строке&nbsp;URL&nbsp;(то есть&nbsp;<em>http://www.</em>ИMЯ_вaшeго_сервера/).&nbsp;Это должно быть имя компьютера, зарегистрированное в системе имен серверов вашей организации или провайдера.</p>\r\n\r\n<p><em>CacheNegotiatedDocs</em></p>\r\n\r\n<p>Эта директива предназначена для пользователей, работающих через&nbsp;<em>прокси-сервер &asymp;</em>&nbsp;сервер, собирающий для них информацию, хранящий ее у себя и передающий им сохраненную копию вместо того, чтобы запрашивать в Интернете новую копию. Эта директива позволяет прокси-серверу кэшировать&nbsp;<em>договорные&nbsp;</em>документы, то есть документы, не получаемые динамически, такие как вывод сценариев&nbsp;CGI&nbsp;или сгенерированная сервером индексная страница. Обычно прокси-серверы не кэшируют такие документы, поскольку велика вероятность их изменения. По умолчанию эта директива отключена (закомментирована при помощи символа ⌠#), и, вероятнее всего, вам не понадобится ее трогать.</p>\r\n\r\n<p><em>Timeout</em></p>\r\n\r\n<p>Это промежуток времени в секундах, в течение которого сервер ждет продолжения недополученного запроса или продолжает попытки возобновления приостановленной передачи ответа. Если у вас медленное соединение с Интернетом или вам приходится передавать большие файлы, увеличьте это значение. В противном случае, 20 минут является вполне достаточным временем ожидания реакции медленного клиента или медленного соединения.</p>\r\n\r\n<p><em>KeepAlive&nbsp;и&nbsp;KeepAliveTimeout</em></p>\r\n\r\n<p>Характеристики&nbsp;KeepAlive&nbsp;являются свойствами протокола&nbsp;HTTP I.I&nbsp;(который до сих пор имеет статус предложения), позволяющими ускорить обработку запросов.&nbsp;HTTP&nbsp;1.0 при каждом запросе на передачу объекта создается новое соединение между клиентом и сервером. В сервере&nbsp;Apache&nbsp;реализована свойственная протоколу&nbsp;HTTP&nbsp;1.1 возможность&nbsp;KeepAlive,&nbsp;что означает возможность запрашивать несколько объектов в рамках одного соединения. Например, раньше передача Web-страницы с четырьмя встроенными изображениями потребовала бы пять отдельных соединений, а с использованием&nbsp;KeepAlive&nbsp;все последовательные запросы производятся в рамках одного соединения. Очевидно, что это сокращает время обработки запросов сервером. Конечно, клиент должен уметь производить такие специальные запросы.</p>\r\n\r\n<p>Значением по умолчанию для&nbsp;KeepAlive&nbsp;является 5 &asymp; максимальное число запросов в рамках одного соединения. Когда значение этого параметра равно 5, наблюдается очевидное увеличение производительности. Чтобы отключить эту возможность, установите параметр&nbsp;KeepAlive&nbsp;равным нулю. Параметр&nbsp;KeepAliveTimeout&nbsp;отражает промежуток времени между последовательными запросами. Другими словами, если клиент в рамках одного соединения производит три запроса, а затем в течение нескольких секунд запросов от него не поступает, сервер считает, что третий запрос был последним. По умолчанию принимается значение 15 секунд.</p>\r\n\r\n<p><em>StartServers</em></p>\r\n\r\n<p>Обратите внимание, что директива&nbsp;StartServers&nbsp;в файле<strong>&nbsp;httpd.conf</strong>&nbsp;стоит после директив&nbsp;MinSpareServers&nbsp;и&nbsp;MaxSpareServers,&nbsp;однако понять значение директив&nbsp;Min-&nbsp;и MaxSpareServers значительно легче, если сначала разобраться с директивой&nbsp;StartServers.</p>\r\n\r\n<p>Когда выбирается автономный&nbsp;(standalone)&nbsp;режим работы сервера&nbsp;(ServerType)&nbsp;и для параметра&nbsp;StartServers&nbsp;задается значение, большее 1 (по умолчанию принимается значение 5), происходит коренное изменение работы сервера. Вместо запуска одного экземпляра сервер при старте создает несколько собственных копий, при этом образуется&nbsp;<em>пул серверов.</em></p>\r\n\r\n<p>Исходная копия сервера выступает в качестве планировщика для всех серверов в пуле, принимая соединения и передавая их свободным копиям. Теоретически, такая стратегия ускоряет процесс обслуживания запросов, снижая накладные расходы. На практике, однако, некоторые вебмастеры утверждают, что этим эффектом можно пренебречь, если только сервер не является очень загруженным (более 100 000 запросов в день).</p>\r\n\r\n<p>Пока что можете оставить в этой строке значение по умолчанию, а позже поэкспериментировать с этой директивой, чтобы найти оптимальную установку для вашего Web-сервера.</p>\r\n\r\n<p><em>MaxSpareServers&nbsp;и&nbsp;MinSpareServers</em></p>\r\n\r\n<p>Если число поступающих к вам запросов превышает число серверов в пуле, заданное параметром&nbsp;StartServers,&nbsp;буфер серверов увеличивается для обслуживания запросов. Эти дополнительные процессы-серверы не завершаются после обработки запроса, ради которого они были запущены; они остаются в памяти. Директива MaxSpareServers позволяет настраивать число свободных серверов, находящихся в пуле. Если их больше, чем указано в директиве MaxSpareServers, то лишние процессы завершаются. Аналогично, если свободных серверов в пуле меньше, чем допускает директива MinSpareServers, то в преддверии наплыва запросов создаются дополнительные копии сервера. Опять-таки, изменение этих настроек мало отражается на работе большинства Web-серверов.</p>\r\n\r\n<p><em>MaxClients</em></p>\r\n\r\n<p>Поскольку Web-серверы обрабатывают большое количество запросов от многочисленных клиентов, это может привести к запуску такого количе-</p>\r\n\r\n<p>ства серверов, что компьютер перестанет справляться с нагрузкой. Директива&nbsp;MaxClients&nbsp;устанавливает максимальное число копий сервера, которые могут выполняться одновременно. Когда достигается этот предел (по умолчанию &asymp; 150), новые запросы получают отказ. Если вам не хочется отказывать пользователям, не устанавливайте слишком маленькое значение. Медленный ответ все-таки лучше, чем отсутствие какого-либо ответа вообще.</p>\r\n\r\n<p><em>MaxRequestsPerChild</em></p>\r\n\r\n<p>В этой директиве задается время жизни любого отдельного сервера в пуле серверов. Обработав установленное здесь количество запросов (по умолчанию &asymp; 30), копия сервера завершается, а вместо нее запускается новая. В большинстве систем изменение этого параметра не дает заметного эффекта.</p>\r\n\r\n<p><em>ProxyRequests&nbsp;и директивы&nbsp;Cache</em></p>\r\n\r\n<p>Как уже было отмечено, прокси-серверы действуют в качестве посредников между клиентами и настоящими серверами, располагающими запрашиваемой клиентом информацией. В разделе ⌠Развернутая конфигурация&nbsp;мы шаг за шагом рассмотрим процесс настройки прокси-сервера. Пока оставьте директиву&nbsp;ProxyRequests&nbsp;и разнообразные директивы&nbsp;Cache&nbsp;закомментированными.</p>\r\n\r\n<p><em>Listen</em></p>\r\n\r\n<p>Использование виртуальных серверов позволяет придать адресу&nbsp;URL&nbsp;такой вид, будто он указывает на отдельный узел, даже если в действительности за ним стоит только часть большого сервера. Например, на сервере www.webstores.com может иметься раздел для информации корпорации&nbsp;ShoopSoft.&nbsp;Традиционно адрес URL выглядел бы, как<strong>&nbsp;http:// www.webstores.com/shoopsoft/.</strong>&nbsp;С использованием механизма виртуальных серверов раздел, принадлежащий корпорации, мог бы получить адрес URL вида:<strong>&nbsp;http://www.shoop.com/,</strong>&nbsp;как будто у корпорации есть в Интернете свой собственный Web-сервер.</p>\r\n', '<p>Описание структуры файла <strong>httpd.conf.</strong></p>\r\n');

-- --------------------------------------------------------

--
-- Структура таблицы `user_list`
--

CREATE TABLE `user_list` (
  `id` int UNSIGNED NOT NULL,
  `login` varchar(15) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `nick` varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `user_list`
--

INSERT INTO `user_list` (`id`, `login`, `password`, `nick`) VALUES
(8, 'alexsgorlov', '2c35bbf0e98c0970d3e07cf9dc5364c8', 'alex68'),
(10, 'sd', '28341be8f4083cc087be48fc3789bf4c', 'alex'),
(11, 'andeygorlov', '1614aca12ce0f990bb4f49cdfbdaaa8e', 'andrew'),
(12, 'alexgorlov', '28341be8f4083cc087be48fc3789bf4c', 'alex'),
(13, 'petrloh', '827ccb0eea8a706c4c34a16891f84e7b', 'Пётр');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `articles`
--
ALTER TABLE `articles`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `user_list`
--
ALTER TABLE `user_list`
  ADD UNIQUE KEY `id` (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `articles`
--
ALTER TABLE `articles`
  MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=27;

--
-- AUTO_INCREMENT для таблицы `user_list`
--
ALTER TABLE `user_list`
  MODIFY `id` int UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=14;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
